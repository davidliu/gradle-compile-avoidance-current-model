repositories {
    jcenter()
}

dependencies {
    compile project(':utils')
}

api {
    moduleName = 'core'
    exports 'com.acme'
}

platforms {
    targetPlatforms 'java7', 'java8', 'java9'
}

task multireleaseJar(type:Jar) {
    dependsOn compileJava7, compileJava9
    baseName = "${project.name}-multi"
    from compileJava7.destinationDir
    into('META-INF/versions/9') {
        from compileJava9.destinationDir
    }

    manifest.attributes('Multi-Release': 'true')
}

task run {}

platforms.targetPlatforms.each { platform ->
    def multiReleaseRun = task "${platform}MultiReleaseRun"(type: JavaExec) {
        dependsOn multireleaseJar
        classpath = files(multireleaseJar.archivePath) + configurations."runtime${platform.capitalize()}"
        executable = "${platforms.jdkFor(platform)}/bin/java"
        main = 'com.acme.Main'
        args = ['Compile avoidance demo']
    }
    run.dependsOn(multiReleaseRun)

    def normalRun = task "${platform}Run"(type: JavaExec) {
        def jarTask = tasks."${platform}Jar"
        dependsOn jarTask
        classpath = files(jarTask.archivePath) + configurations."runtime${platform.capitalize()}"
        executable = "${platforms.jdkFor(platform)}/bin/java"
        main = 'com.acme.Main'
        args = ['Compile avoidance demo']
    }
    run.dependsOn(normalRun)
}
